{"ast":null,"code":"\"use strict\";\n/**\n * implements https://w3c.github.io/accname/\n */\n\nvar _createForOfIteratorHelper = require(\"/home/utkarsh/Desktop/jagrukcorona/react-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _toConsumableArray = require(\"/home/utkarsh/Desktop/jagrukcorona/react-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getRole_1 = __importDefault(require(\"./getRole\"));\n\nvar util_1 = require(\"./util\");\n/**\n * Small utility that handles all the JS quirks with `this` which is important\n * if no mock is provided.\n * @param element\n * @param options - These are not optional to prevent accidentally calling it without options in `computeAccessibleName`\n */\n\n\nfunction createGetComputedStyle(element, options) {\n  var window = util_1.safeWindow(element);\n  var _options$getComputedS = options.getComputedStyle,\n      getComputedStyle = _options$getComputedS === void 0 ? window.getComputedStyle.bind(window) : _options$getComputedS;\n  return getComputedStyle;\n}\n/**\n *\n * @param {string} string -\n * @returns {FlatString} -\n */\n\n\nfunction asFlatString(s) {\n  return s.trim().replace(/\\s\\s+/g, \" \");\n}\n/**\n * https://w3c.github.io/aria/#namefromprohibited\n */\n\n\nfunction prohibitsNaming(node) {\n  return hasAnyConcreteRoles(node, [\"caption\", \"code\", \"deletion\", \"emphasis\", \"generic\", \"insertion\", \"paragraph\", \"presentation\", \"strong\", \"subscript\", \"superscript\"]);\n}\n/**\n *\n * @param node -\n * @param options - These are not optional to prevent accidentally calling it without options in `computeAccessibleName`\n * @returns {boolean} -\n */\n\n\nfunction isHidden(node, options) {\n  if (!util_1.isElement(node)) {\n    return false;\n  }\n\n  if (node.hasAttribute(\"hidden\") || node.getAttribute(\"aria-hidden\") === \"true\") {\n    return true;\n  }\n\n  var style = createGetComputedStyle(node, options)(node);\n  return style.getPropertyValue(\"display\") === \"none\" || style.getPropertyValue(\"visibility\") === \"hidden\";\n}\n/**\n *\n * @param {Node} node -\n * @param {string} attributeName -\n * @returns {Element[]} -\n */\n\n\nfunction idRefs(node, attributeName) {\n  if (util_1.isElement(node) && node.hasAttribute(attributeName)) {\n    // safe due to hasAttribute check\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var ids = node.getAttribute(attributeName).split(\" \");\n    return ids // safe since it can't be null for an Element\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    .map(function (id) {\n      return node.ownerDocument.getElementById(id);\n    }).filter(function (element) {\n      return element !== null;\n    } // TODO: why does this not narrow?\n    );\n  }\n\n  return [];\n}\n/**\n * All defined children. This include childNodes as well as owned (portaled) trees\n * via aria-owns\n * @param node\n */\n\n\nfunction queryChildNodes(node) {\n  return Array.from(node.childNodes).concat(idRefs(node, \"aria-owns\"));\n}\n/**\n * @param {Node} node -\n * @returns {boolean} - As defined in step 2E of https://w3c.github.io/accname/#mapping_additional_nd_te\n */\n\n\nfunction isControl(node) {\n  return hasAnyConcreteRoles(node, [\"button\", \"combobox\", \"listbox\", \"textbox\"]) || hasAbstractRole(node, \"range\");\n}\n\nfunction hasAbstractRole(node, role) {\n  if (!util_1.isElement(node)) {\n    return false;\n  }\n\n  switch (role) {\n    case \"range\":\n      return hasAnyConcreteRoles(node, [\"meter\", \"progressbar\", \"scrollbar\", \"slider\", \"spinbutton\"]);\n\n    default:\n      throw new TypeError(\"No knowledge about abstract role '\".concat(role, \"'. This is likely a bug :(\"));\n  }\n}\n\nfunction hasAnyConcreteRoles(node, roles) {\n  if (util_1.isElement(node)) {\n    return roles.indexOf(getRole_1.default(node)) !== -1;\n  }\n\n  return false;\n}\n/**\n * element.querySelectorAll but also considers owned tree\n * @param element\n * @param selectors\n */\n\n\nfunction querySelectorAllSubtree(element, selectors) {\n  var elements = [];\n\n  for (var _i = 0, _arr = [element].concat(_toConsumableArray(idRefs(element, \"aria-owns\"))); _i < _arr.length; _i++) {\n    var root = _arr[_i];\n    elements.push.apply(elements, _toConsumableArray(Array.from(root.querySelectorAll(selectors))));\n  }\n\n  return elements;\n}\n\nfunction querySelectedOptions(listbox) {\n  if (util_1.isHTMLSelectElement(listbox)) {\n    // IE11 polyfill\n    return listbox.selectedOptions || querySelectorAllSubtree(listbox, \"[selected]\");\n  }\n\n  return querySelectorAllSubtree(listbox, '[aria-selected=\"true\"]');\n}\n\nfunction isMarkedPresentational(node) {\n  return hasAnyConcreteRoles(node, [\"none\", \"presentation\"]);\n}\n/**\n * TODO\n */\n\n\nfunction isNativeHostLanguageTextAlternativeElement(node) {\n  return false;\n}\n/**\n * https://w3c.github.io/aria/#namefromcontent\n */\n\n\nfunction allowsNameFromContent(node) {\n  return hasAnyConcreteRoles(node, [\"button\", \"cell\", \"checkbox\", \"columnheader\", \"gridcell\", \"heading\", \"label\", \"legend\", \"link\", \"menuitem\", \"menuitemcheckbox\", \"menuitemradio\", \"option\", \"radio\", \"row\", \"rowheader\", \"switch\", \"tab\", \"tooltip\", \"treeitem\"]);\n}\n/**\n * TODO\n */\n\n\nfunction isDescendantOfNativeHostLanguageTextAlternativeElement(node) {\n  return false;\n}\n/**\n * TODO\n */\n\n\nfunction computeTooltipAttributeValue(node) {\n  return null;\n}\n\nfunction getValueOfTextbox(element) {\n  if (util_1.isHTMLInputElement(element) || util_1.isHTMLTextAreaElement(element)) {\n    return element.value;\n  } // https://github.com/eps1lon/dom-accessibility-api/issues/4\n\n\n  return element.textContent || \"\";\n}\n\nfunction getTextualContent(declaration) {\n  var content = declaration.getPropertyValue(\"content\");\n\n  if (/^[\"'].*[\"']$/.test(content)) {\n    return content.slice(1, -1);\n  }\n\n  return \"\";\n}\n/**\n * implements https://w3c.github.io/accname/#mapping_additional_nd_te\n * @param root\n * @param [options]\n * @parma [options.getComputedStyle] - mock window.getComputedStyle. Needs `content`, `display` and `visibility`\n */\n\n\nfunction computeAccessibleName(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var consultedNodes = new Set();\n\n  if (prohibitsNaming(root)) {\n    return \"\";\n  } // 2F.i\n\n\n  function computeMiscTextAlternative(node, context) {\n    var accumulatedText = \"\";\n\n    if (util_1.isElement(node)) {\n      var pseudoBefore = createGetComputedStyle(node, options)(node, \"::before\");\n      var beforeContent = getTextualContent(pseudoBefore);\n      accumulatedText = \"\".concat(beforeContent, \" \").concat(accumulatedText);\n    }\n\n    var _iterator = _createForOfIteratorHelper(queryChildNodes(node)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var child = _step.value;\n        var result = computeTextAlternative(child, {\n          isEmbeddedInLabel: context.isEmbeddedInLabel,\n          isReferenced: false,\n          recursion: true\n        }); // TODO: Unclear why display affects delimiter\n\n        var display = util_1.isElement(node) && createGetComputedStyle(node, options)(node).getPropertyValue(\"display\");\n        var separator = display !== \"inline\" ? \" \" : \"\";\n        accumulatedText += \"\".concat(separator).concat(result);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (util_1.isElement(node)) {\n      var pseudoAfter = createGetComputedStyle(node, options)(node, \":after\");\n      var afterContent = getTextualContent(pseudoAfter);\n      accumulatedText = \"\".concat(accumulatedText, \" \").concat(afterContent);\n    }\n\n    return accumulatedText;\n  }\n  /**\n   * TODO: placeholder\n   */\n\n\n  function computeAttributeTextAlternative(node) {\n    if (!util_1.isElement(node)) {\n      return null;\n    }\n\n    var titleAttribute = node.getAttributeNode(\"title\");\n\n    if (titleAttribute !== null && !consultedNodes.has(titleAttribute)) {\n      consultedNodes.add(titleAttribute);\n      return titleAttribute.value;\n    }\n\n    var altAttribute = node.getAttributeNode(\"alt\");\n\n    if (altAttribute !== null && !consultedNodes.has(altAttribute)) {\n      consultedNodes.add(altAttribute);\n      return altAttribute.value;\n    }\n\n    if (util_1.isHTMLInputElement(node) && node.type === \"button\") {\n      consultedNodes.add(node);\n      return node.getAttribute(\"value\") || \"\";\n    }\n\n    return null;\n  }\n\n  function computeElementTextAlternative(node) {\n    if (!util_1.isHTMLInputElement(node)) {\n      return null;\n    }\n\n    var input = node; // https://w3c.github.io/html-aam/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-description-computation\n\n    if (input.type === \"submit\") {\n      return \"Submit\";\n    }\n\n    if (input.type === \"reset\") {\n      return \"Reset\";\n    }\n\n    var labels = input.labels; // IE11 does not implement labels, TODO: verify with caniuse instead of mdn\n\n    if (labels === null || labels === undefined || labels.length === 0) {\n      return null;\n    }\n\n    consultedNodes.add(input);\n    return Array.from(labels).map(function (element) {\n      return computeTextAlternative(element, {\n        isEmbeddedInLabel: true,\n        isReferenced: false,\n        recursion: true\n      });\n    }).filter(function (label) {\n      return label.length > 0;\n    }).join(\" \");\n  }\n\n  function computeTextAlternative(current, context) {\n    if (consultedNodes.has(current)) {\n      return \"\";\n    } // special casing, cheating to make tests pass\n    // https://github.com/w3c/accname/issues/67\n\n\n    if (hasAnyConcreteRoles(current, [\"menu\"])) {\n      consultedNodes.add(current);\n      return \"\";\n    } // 2A\n\n\n    if (isHidden(current, options) && !context.isReferenced) {\n      consultedNodes.add(current);\n      return \"\";\n    } // 2B\n\n\n    var labelElements = idRefs(current, \"aria-labelledby\");\n\n    if (!context.isReferenced && labelElements.length > 0) {\n      return labelElements.map(function (element) {\n        return computeTextAlternative(element, {\n          isEmbeddedInLabel: context.isEmbeddedInLabel,\n          isReferenced: true,\n          // thais isn't recursion as specified, otherwise we would skip\n          // `aria-label` in\n          // <input id=\"myself\" aria-label=\"foo\" aria-labelledby=\"myself\"\n          recursion: false\n        });\n      }).join(\" \");\n    } // 2C\n    // Changed from the spec in anticipation of https://github.com/w3c/accname/issues/64\n    // spec says we should only consider skipping if we have a non-empty label\n\n\n    var skipToStep2E = context.recursion && isControl(current);\n\n    if (!skipToStep2E) {\n      var ariaLabel = (util_1.isElement(current) && current.getAttribute(\"aria-label\") || \"\").trim();\n\n      if (ariaLabel !== \"\") {\n        consultedNodes.add(current);\n        return ariaLabel;\n      } // 2D\n\n\n      if (!isMarkedPresentational(current)) {\n        var elementTextAlternative = computeElementTextAlternative(current);\n\n        if (elementTextAlternative !== null) {\n          consultedNodes.add(current);\n          return elementTextAlternative;\n        }\n\n        var attributeTextAlternative = computeAttributeTextAlternative(current);\n\n        if (attributeTextAlternative !== null) {\n          consultedNodes.add(current);\n          return attributeTextAlternative;\n        }\n      }\n    } // 2E\n\n\n    if (skipToStep2E || context.isEmbeddedInLabel || context.isReferenced) {\n      if (hasAnyConcreteRoles(current, [\"combobox\", \"listbox\"])) {\n        consultedNodes.add(current);\n        var selectedOptions = querySelectedOptions(current);\n\n        if (selectedOptions.length === 0) {\n          // defined per test `name_heading_combobox`\n          return util_1.isHTMLInputElement(current) ? current.value : \"\";\n        }\n\n        return Array.from(selectedOptions).map(function (selectedOption) {\n          return computeTextAlternative(selectedOption, {\n            isEmbeddedInLabel: context.isEmbeddedInLabel,\n            isReferenced: false,\n            recursion: true\n          });\n        }).join(\" \");\n      }\n\n      if (hasAbstractRole(current, \"range\")) {\n        consultedNodes.add(current);\n\n        if (current.hasAttribute(\"aria-valuetext\")) {\n          // safe due to hasAttribute guard\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          return current.getAttribute(\"aria-valuetext\");\n        }\n\n        if (current.hasAttribute(\"aria-valuenow\")) {\n          // safe due to hasAttribute guard\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          return current.getAttribute(\"aria-valuenow\");\n        } // Otherwise, use the value as specified by a host language attribute.\n\n\n        return current.getAttribute(\"value\") || \"\";\n      }\n\n      if (hasAnyConcreteRoles(current, [\"textbox\"])) {\n        consultedNodes.add(current);\n        return getValueOfTextbox(current);\n      }\n    } // 2F: https://w3c.github.io/accname/#step2F\n\n\n    if (allowsNameFromContent(current) || util_1.isElement(current) && context.isReferenced || isNativeHostLanguageTextAlternativeElement(current) || isDescendantOfNativeHostLanguageTextAlternativeElement(current)) {\n      consultedNodes.add(current);\n      return computeMiscTextAlternative(current, {\n        isEmbeddedInLabel: context.isEmbeddedInLabel,\n        isReferenced: false\n      });\n    }\n\n    if (current.nodeType === current.TEXT_NODE) {\n      consultedNodes.add(current);\n      return current.textContent || \"\";\n    }\n\n    if (context.recursion) {\n      consultedNodes.add(current);\n      return computeMiscTextAlternative(current, {\n        isEmbeddedInLabel: context.isEmbeddedInLabel,\n        isReferenced: false\n      });\n    }\n\n    var tooltipAttributeValue = computeTooltipAttributeValue(current);\n\n    if (tooltipAttributeValue !== null) {\n      consultedNodes.add(current);\n      return tooltipAttributeValue;\n    } // TODO should this be reachable?\n\n\n    consultedNodes.add(current);\n    return \"\";\n  }\n\n  return asFlatString(computeTextAlternative(root, {\n    isEmbeddedInLabel: false,\n    isReferenced: false,\n    recursion: false\n  }));\n}\n\nexports.computeAccessibleName = computeAccessibleName;","map":{"version":3,"sources":["../sources/accessible-name.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * implements https://w3c.github.io/accname/\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getRole_1 = __importDefault(require(\"./getRole\"));\nconst util_1 = require(\"./util\");\n/**\n * Small utility that handles all the JS quirks with `this` which is important\n * if no mock is provided.\n * @param element\n * @param options - These are not optional to prevent accidentally calling it without options in `computeAccessibleName`\n */\nfunction createGetComputedStyle(element, options) {\n    const window = util_1.safeWindow(element);\n    const { \n    // This might be overengineered. I don't know what happens if I call\n    // window.getComputedStyle(elementFromAnotherWindow) or if I don't bind it\n    // the type declarations don't require a `this`\n    getComputedStyle = window.getComputedStyle.bind(window) } = options;\n    return getComputedStyle;\n}\n/**\n *\n * @param {string} string -\n * @returns {FlatString} -\n */\nfunction asFlatString(s) {\n    return s.trim().replace(/\\s\\s+/g, \" \");\n}\n/**\n * https://w3c.github.io/aria/#namefromprohibited\n */\nfunction prohibitsNaming(node) {\n    return hasAnyConcreteRoles(node, [\n        \"caption\",\n        \"code\",\n        \"deletion\",\n        \"emphasis\",\n        \"generic\",\n        \"insertion\",\n        \"paragraph\",\n        \"presentation\",\n        \"strong\",\n        \"subscript\",\n        \"superscript\"\n    ]);\n}\n/**\n *\n * @param node -\n * @param options - These are not optional to prevent accidentally calling it without options in `computeAccessibleName`\n * @returns {boolean} -\n */\nfunction isHidden(node, options) {\n    if (!util_1.isElement(node)) {\n        return false;\n    }\n    if (node.hasAttribute(\"hidden\") ||\n        node.getAttribute(\"aria-hidden\") === \"true\") {\n        return true;\n    }\n    const style = createGetComputedStyle(node, options)(node);\n    return (style.getPropertyValue(\"display\") === \"none\" ||\n        style.getPropertyValue(\"visibility\") === \"hidden\");\n}\n/**\n *\n * @param {Node} node -\n * @param {string} attributeName -\n * @returns {Element[]} -\n */\nfunction idRefs(node, attributeName) {\n    if (util_1.isElement(node) && node.hasAttribute(attributeName)) {\n        // safe due to hasAttribute check\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const ids = node.getAttribute(attributeName).split(\" \");\n        return ids\n            // safe since it can't be null for an Element\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            .map(id => node.ownerDocument.getElementById(id))\n            .filter((element) => element !== null\n        // TODO: why does this not narrow?\n        );\n    }\n    return [];\n}\n/**\n * All defined children. This include childNodes as well as owned (portaled) trees\n * via aria-owns\n * @param node\n */\nfunction queryChildNodes(node) {\n    return Array.from(node.childNodes).concat(idRefs(node, \"aria-owns\"));\n}\n/**\n * @param {Node} node -\n * @returns {boolean} - As defined in step 2E of https://w3c.github.io/accname/#mapping_additional_nd_te\n */\nfunction isControl(node) {\n    return (hasAnyConcreteRoles(node, [\"button\", \"combobox\", \"listbox\", \"textbox\"]) ||\n        hasAbstractRole(node, \"range\"));\n}\nfunction hasAbstractRole(node, role) {\n    if (!util_1.isElement(node)) {\n        return false;\n    }\n    switch (role) {\n        case \"range\":\n            return hasAnyConcreteRoles(node, [\n                \"meter\",\n                \"progressbar\",\n                \"scrollbar\",\n                \"slider\",\n                \"spinbutton\"\n            ]);\n        default:\n            throw new TypeError(`No knowledge about abstract role '${role}'. This is likely a bug :(`);\n    }\n}\nfunction hasAnyConcreteRoles(node, roles) {\n    if (util_1.isElement(node)) {\n        return roles.indexOf(getRole_1.default(node)) !== -1;\n    }\n    return false;\n}\n/**\n * element.querySelectorAll but also considers owned tree\n * @param element\n * @param selectors\n */\nfunction querySelectorAllSubtree(element, selectors) {\n    const elements = [];\n    for (const root of [element, ...idRefs(element, \"aria-owns\")]) {\n        elements.push(...Array.from(root.querySelectorAll(selectors)));\n    }\n    return elements;\n}\nfunction querySelectedOptions(listbox) {\n    if (util_1.isHTMLSelectElement(listbox)) {\n        // IE11 polyfill\n        return (listbox.selectedOptions || querySelectorAllSubtree(listbox, \"[selected]\"));\n    }\n    return querySelectorAllSubtree(listbox, '[aria-selected=\"true\"]');\n}\nfunction isMarkedPresentational(node) {\n    return hasAnyConcreteRoles(node, [\"none\", \"presentation\"]);\n}\n/**\n * TODO\n */\nfunction isNativeHostLanguageTextAlternativeElement(node) {\n    return false;\n}\n/**\n * https://w3c.github.io/aria/#namefromcontent\n */\nfunction allowsNameFromContent(node) {\n    return hasAnyConcreteRoles(node, [\n        \"button\",\n        \"cell\",\n        \"checkbox\",\n        \"columnheader\",\n        \"gridcell\",\n        \"heading\",\n        \"label\",\n        \"legend\",\n        \"link\",\n        \"menuitem\",\n        \"menuitemcheckbox\",\n        \"menuitemradio\",\n        \"option\",\n        \"radio\",\n        \"row\",\n        \"rowheader\",\n        \"switch\",\n        \"tab\",\n        \"tooltip\",\n        \"treeitem\"\n    ]);\n}\n/**\n * TODO\n */\nfunction isDescendantOfNativeHostLanguageTextAlternativeElement(node) {\n    return false;\n}\n/**\n * TODO\n */\nfunction computeTooltipAttributeValue(node) {\n    return null;\n}\nfunction getValueOfTextbox(element) {\n    if (util_1.isHTMLInputElement(element) || util_1.isHTMLTextAreaElement(element)) {\n        return element.value;\n    }\n    // https://github.com/eps1lon/dom-accessibility-api/issues/4\n    return element.textContent || \"\";\n}\nfunction getTextualContent(declaration) {\n    const content = declaration.getPropertyValue(\"content\");\n    if (/^[\"'].*[\"']$/.test(content)) {\n        return content.slice(1, -1);\n    }\n    return \"\";\n}\n/**\n * implements https://w3c.github.io/accname/#mapping_additional_nd_te\n * @param root\n * @param [options]\n * @parma [options.getComputedStyle] - mock window.getComputedStyle. Needs `content`, `display` and `visibility`\n */\nfunction computeAccessibleName(root, options = {}) {\n    const consultedNodes = new Set();\n    if (prohibitsNaming(root)) {\n        return \"\";\n    }\n    // 2F.i\n    function computeMiscTextAlternative(node, context) {\n        let accumulatedText = \"\";\n        if (util_1.isElement(node)) {\n            const pseudoBefore = createGetComputedStyle(node, options)(node, \"::before\");\n            const beforeContent = getTextualContent(pseudoBefore);\n            accumulatedText = `${beforeContent} ${accumulatedText}`;\n        }\n        for (const child of queryChildNodes(node)) {\n            const result = computeTextAlternative(child, {\n                isEmbeddedInLabel: context.isEmbeddedInLabel,\n                isReferenced: false,\n                recursion: true\n            });\n            // TODO: Unclear why display affects delimiter\n            const display = util_1.isElement(node) &&\n                createGetComputedStyle(node, options)(node).getPropertyValue(\"display\");\n            const separator = display !== \"inline\" ? \" \" : \"\";\n            accumulatedText += `${separator}${result}`;\n        }\n        if (util_1.isElement(node)) {\n            const pseudoAfter = createGetComputedStyle(node, options)(node, \":after\");\n            const afterContent = getTextualContent(pseudoAfter);\n            accumulatedText = `${accumulatedText} ${afterContent}`;\n        }\n        return accumulatedText;\n    }\n    /**\n     * TODO: placeholder\n     */\n    function computeAttributeTextAlternative(node) {\n        if (!util_1.isElement(node)) {\n            return null;\n        }\n        const titleAttribute = node.getAttributeNode(\"title\");\n        if (titleAttribute !== null && !consultedNodes.has(titleAttribute)) {\n            consultedNodes.add(titleAttribute);\n            return titleAttribute.value;\n        }\n        const altAttribute = node.getAttributeNode(\"alt\");\n        if (altAttribute !== null && !consultedNodes.has(altAttribute)) {\n            consultedNodes.add(altAttribute);\n            return altAttribute.value;\n        }\n        if (util_1.isHTMLInputElement(node) && node.type === \"button\") {\n            consultedNodes.add(node);\n            return node.getAttribute(\"value\") || \"\";\n        }\n        return null;\n    }\n    function computeElementTextAlternative(node) {\n        if (!util_1.isHTMLInputElement(node)) {\n            return null;\n        }\n        const input = node;\n        // https://w3c.github.io/html-aam/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-description-computation\n        if (input.type === \"submit\") {\n            return \"Submit\";\n        }\n        if (input.type === \"reset\") {\n            return \"Reset\";\n        }\n        const { labels } = input;\n        // IE11 does not implement labels, TODO: verify with caniuse instead of mdn\n        if (labels === null || labels === undefined || labels.length === 0) {\n            return null;\n        }\n        consultedNodes.add(input);\n        return Array.from(labels)\n            .map(element => {\n            return computeTextAlternative(element, {\n                isEmbeddedInLabel: true,\n                isReferenced: false,\n                recursion: true\n            });\n        })\n            .filter(label => {\n            return label.length > 0;\n        })\n            .join(\" \");\n    }\n    function computeTextAlternative(current, context) {\n        if (consultedNodes.has(current)) {\n            return \"\";\n        }\n        // special casing, cheating to make tests pass\n        // https://github.com/w3c/accname/issues/67\n        if (hasAnyConcreteRoles(current, [\"menu\"])) {\n            consultedNodes.add(current);\n            return \"\";\n        }\n        // 2A\n        if (isHidden(current, options) && !context.isReferenced) {\n            consultedNodes.add(current);\n            return \"\";\n        }\n        // 2B\n        const labelElements = idRefs(current, \"aria-labelledby\");\n        if (!context.isReferenced && labelElements.length > 0) {\n            return labelElements\n                .map(element => computeTextAlternative(element, {\n                isEmbeddedInLabel: context.isEmbeddedInLabel,\n                isReferenced: true,\n                // thais isn't recursion as specified, otherwise we would skip\n                // `aria-label` in\n                // <input id=\"myself\" aria-label=\"foo\" aria-labelledby=\"myself\"\n                recursion: false\n            }))\n                .join(\" \");\n        }\n        // 2C\n        // Changed from the spec in anticipation of https://github.com/w3c/accname/issues/64\n        // spec says we should only consider skipping if we have a non-empty label\n        const skipToStep2E = context.recursion && isControl(current);\n        if (!skipToStep2E) {\n            const ariaLabel = ((util_1.isElement(current) && current.getAttribute(\"aria-label\")) ||\n                \"\").trim();\n            if (ariaLabel !== \"\") {\n                consultedNodes.add(current);\n                return ariaLabel;\n            }\n            // 2D\n            if (!isMarkedPresentational(current)) {\n                const elementTextAlternative = computeElementTextAlternative(current);\n                if (elementTextAlternative !== null) {\n                    consultedNodes.add(current);\n                    return elementTextAlternative;\n                }\n                const attributeTextAlternative = computeAttributeTextAlternative(current);\n                if (attributeTextAlternative !== null) {\n                    consultedNodes.add(current);\n                    return attributeTextAlternative;\n                }\n            }\n        }\n        // 2E\n        if (skipToStep2E || context.isEmbeddedInLabel || context.isReferenced) {\n            if (hasAnyConcreteRoles(current, [\"combobox\", \"listbox\"])) {\n                consultedNodes.add(current);\n                const selectedOptions = querySelectedOptions(current);\n                if (selectedOptions.length === 0) {\n                    // defined per test `name_heading_combobox`\n                    return util_1.isHTMLInputElement(current) ? current.value : \"\";\n                }\n                return Array.from(selectedOptions)\n                    .map(selectedOption => {\n                    return computeTextAlternative(selectedOption, {\n                        isEmbeddedInLabel: context.isEmbeddedInLabel,\n                        isReferenced: false,\n                        recursion: true\n                    });\n                })\n                    .join(\" \");\n            }\n            if (hasAbstractRole(current, \"range\")) {\n                consultedNodes.add(current);\n                if (current.hasAttribute(\"aria-valuetext\")) {\n                    // safe due to hasAttribute guard\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    return current.getAttribute(\"aria-valuetext\");\n                }\n                if (current.hasAttribute(\"aria-valuenow\")) {\n                    // safe due to hasAttribute guard\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    return current.getAttribute(\"aria-valuenow\");\n                }\n                // Otherwise, use the value as specified by a host language attribute.\n                return current.getAttribute(\"value\") || \"\";\n            }\n            if (hasAnyConcreteRoles(current, [\"textbox\"])) {\n                consultedNodes.add(current);\n                return getValueOfTextbox(current);\n            }\n        }\n        // 2F: https://w3c.github.io/accname/#step2F\n        if (allowsNameFromContent(current) ||\n            (util_1.isElement(current) && context.isReferenced) ||\n            isNativeHostLanguageTextAlternativeElement(current) ||\n            isDescendantOfNativeHostLanguageTextAlternativeElement(current)) {\n            consultedNodes.add(current);\n            return computeMiscTextAlternative(current, {\n                isEmbeddedInLabel: context.isEmbeddedInLabel,\n                isReferenced: false\n            });\n        }\n        if (current.nodeType === current.TEXT_NODE) {\n            consultedNodes.add(current);\n            return current.textContent || \"\";\n        }\n        if (context.recursion) {\n            consultedNodes.add(current);\n            return computeMiscTextAlternative(current, {\n                isEmbeddedInLabel: context.isEmbeddedInLabel,\n                isReferenced: false\n            });\n        }\n        const tooltipAttributeValue = computeTooltipAttributeValue(current);\n        if (tooltipAttributeValue !== null) {\n            consultedNodes.add(current);\n            return tooltipAttributeValue;\n        }\n        // TODO should this be reachable?\n        consultedNodes.add(current);\n        return \"\";\n    }\n    return asFlatString(computeTextAlternative(root, {\n        isEmbeddedInLabel: false,\n        isReferenced: false,\n        recursion: false\n    }));\n}\nexports.computeAccessibleName = computeAccessibleName;\n//# sourceMappingURL=accessible-name.js.map"]},"metadata":{},"sourceType":"script"}