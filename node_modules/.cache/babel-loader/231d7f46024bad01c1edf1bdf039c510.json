{"ast":null,"code":"var _jsxFileName = \"/home/priyanshu/Jagruk_Corona/src/App.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { GoogleLogin } from 'react-google-login';\nimport { useHistory } from 'react-router-dom';\nimport GoogleLogout from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\nimport { render } from '@testing-library/react';\nimport Report from './report';\nimport { useGoogleLogin } from 'react-google-login';\nconst googleConfig = {\n  clientId: '916995490002-h4438ccl1o2hth8nk1eipja9ijvo79g6.apps.googleusercontent.com',\n  // e.g. asdfghjkljhgfdsghjk.apps.googleusercontent.com\n  clientSecret: 'EEWeOXFIARPTJQ3M0X_DM-sb',\n  // e.g. _ASDFA%DFASDFASDFASD#FAD-\n  redirect: 'https://me.jc.com/login' // this must match your google api settings\n\n};\n/**\n * Create the google auth object which gives us access to talk to google's apis.\n */\n\nconst defaultScope = ['https://www.googleapis.com/auth/plus.me', 'https://www.googleapis.com/auth/userinfo.email'];\n\nfunction App() {\n  const responseGoogle = response => {\n    // console.log(\"succes login\");\n    // console.log(response);\n    //setState =\"1\";\n    window.localStorage.firstname = response.profileObj.givenName;\n    window.localStorage.secondname = response.profileObj.familyName;\n    window.localStorage.email = response.profileObj.email;\n    window.localStorage.login = \"true\";\n    window.localStorage.uid = response.profileObj.googleId;\n    fetch(\"https://demo-stormbreaker.herokuapp.com/users/is_exist\", {\n      method: \"POST\",\n      firebase_id: window.localStorage.uid,\n      body: JSON.stringify({\n        firebase_id: window.localStorage.uid\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.status == true) {\n        // no register needed\n        // console.log(\"no register, adding uuid\");\n        // console.log(result);\n        window.localStorage.uuid = result.user_id;\n      } else {\n        //register needed\n        console.log(\"registering\");\n        fetch(\"https://demo-stormbreaker.herokuapp.com/users/register\", {\n          method: \"POST\",\n          firebase_id: window.localStorage.uid,\n          body: JSON.stringify({\n            firebase_id: window.localStorage.uid,\n            first_name: window.localStorage.firstname,\n            last_name: window.localStorage.secondname,\n            email: window.localStorage.email,\n            device_id: \"1\"\n          })\n        }).then(res => res.json()).then(result => {\n          // console.log(\"register result\");\n          // console.log(result);\n          window.localStorage.uuid = result.user_id;\n        }, // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          // register unsucessful, show error & redirect to home page\n          window.location.href = \"/home\";\n        });\n      }\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {// console.log(\"error\");\n      //console.log(error);\n    });\n    window.location.href = \"/intro\";\n  }; // const { signIn, loaded } = useGoogleLogin({\n  //   onSuccess,\n  //   clientId,\n  //   cookiePolicy,\n  //   loginHint,\n  //   hostedDomain,\n  //   autoLoad,\n  //   isSignedIn,\n  //   fetchBasicProfile,\n  //   redirectUri,\n  //   discoveryDocs,\n  //   onFailure,\n  //   uxMode,\n  //   scope,\n  //   accessType,\n  //   responseType,\n  //   jsSrc,\n  //   onRequest,\n  //   prompt\n  // })\n\n\n  const failedGoogle = response => {// console.log(\"failed\");\n    // console.log(response);\n  };\n\n  if (window.localStorage.login && window.localStorage.login == \"true\") {\n    window.location.href = \"/intro\";\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"page1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      class: \"intro-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, \"Let\\u2019s \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 36\n      }\n    }), \" make India Corona-free\"), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"intro-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Inform violations and be a responsible citizen\"), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"intro-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"Help enforce social distancing and hygiene in your community.\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"log\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: \"916995490002-h4438ccl1o2hth8nk1eipja9ijvo79g6.apps.googleusercontent.com\",\n      render: renderProps => /*#__PURE__*/React.createElement(\"button\", {\n        class: \"but\",\n        onClick: renderProps.onClick,\n        disabled: renderProps.disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 36\n        }\n      }, \"Login with Google\", /*#__PURE__*/React.createElement(\"img\", {\n        id: \"google_logo\",\n        src: \"icon/Google.png\",\n        alt: \"noimage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      })),\n      buttonText: \"Login\",\n      onSuccess: responseGoogle,\n      onFailure: failedGoogle,\n      cookiePolicy: 'single_host_origin' // isSignedIn={true}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"or\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, \"Or\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"skip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 31\n      }\n    }, \"Skip Login\"))));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/home/priyanshu/Jagruk_Corona/src/App.js"],"names":["React","useState","ReactDOM","GoogleLogin","useHistory","GoogleLogout","Redirect","render","Report","useGoogleLogin","googleConfig","clientId","clientSecret","redirect","defaultScope","App","responseGoogle","response","window","localStorage","firstname","profileObj","givenName","secondname","familyName","email","login","uid","googleId","fetch","method","firebase_id","body","JSON","stringify","then","res","json","result","status","uuid","user_id","console","log","first_name","last_name","device_id","error","location","href","failedGoogle","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport {GoogleLogin} from 'react-google-login';\nimport { useHistory } from 'react-router-dom';\nimport GoogleLogout from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\nimport { render } from '@testing-library/react';\nimport Report from './report';\nimport { useGoogleLogin } from 'react-google-login';\n\n\nconst googleConfig = {\n  clientId: '916995490002-h4438ccl1o2hth8nk1eipja9ijvo79g6.apps.googleusercontent.com', // e.g. asdfghjkljhgfdsghjk.apps.googleusercontent.com\n  clientSecret: 'EEWeOXFIARPTJQ3M0X_DM-sb', // e.g. _ASDFA%DFASDFASDFASD#FAD-\n  redirect: 'https://me.jc.com/login' // this must match your google api settings\n};\n\n/**\n * Create the google auth object which gives us access to talk to google's apis.\n */\n\nconst defaultScope = [\n    'https://www.googleapis.com/auth/plus.me',\n    'https://www.googleapis.com/auth/userinfo.email',\n];\n\n\n\nfunction App() {\n  \n  const responseGoogle = (response) => {\n    // console.log(\"succes login\");\n    // console.log(response);\n  \n    //setState =\"1\";\n    window.localStorage.firstname=response.profileObj.givenName;\n    window.localStorage.secondname=response.profileObj.familyName;\n    window.localStorage.email=response.profileObj.email;\n    window.localStorage.login=\"true\";\n    window.localStorage.uid = response.profileObj.googleId;\n    fetch(\"https://demo-stormbreaker.herokuapp.com/users/is_exist\",{\n      method: \"POST\",\n      firebase_id: window.localStorage.uid,\n      body: JSON.stringify({\n          firebase_id: window.localStorage.uid\n      })\n  })\n  .then(res => res.json())\n  .then(\n   (result) => {\n     \n     if(result.status==true){\n         // no register needed\n         // console.log(\"no register, adding uuid\");\n         // console.log(result);\n         window.localStorage.uuid=result.user_id;\n     }\n     else{\n         //register needed\n         console.log(\"registering\");\n         fetch(\"https://demo-stormbreaker.herokuapp.com/users/register\",{\n           method: \"POST\",\n           firebase_id: window.localStorage.uid,\n           body: JSON.stringify({\n               firebase_id: window.localStorage.uid,\n               first_name: window.localStorage.firstname,\n               last_name: window.localStorage.secondname,\n               email: window.localStorage.email,\n               device_id:\"1\"\n\n\n           })\n       })\n       .then(res => res.json())\n       .then(\n        (result) => {\n               // console.log(\"register result\");\n               // console.log(result);\n               window.localStorage.uuid=result.user_id;\n          \n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          // register unsucessful, show error & redirect to home page\n           window.location.href=\"/home\";\n\n        });\n\n     }\n   },\n   // Note: it's important to handle errors here\n   // instead of a catch() block so that we don't swallow\n   // exceptions from actual bugs in components.\n   (error) => {\n    // console.log(\"error\");\n     //console.log(error);\n   });\n\n\n\n    window.location.href=\"/intro\";\n    \n}\n// const { signIn, loaded } = useGoogleLogin({\n//   onSuccess,\n//   clientId,\n//   cookiePolicy,\n//   loginHint,\n//   hostedDomain,\n//   autoLoad,\n//   isSignedIn,\n//   fetchBasicProfile,\n//   redirectUri,\n//   discoveryDocs,\n//   onFailure,\n//   uxMode,\n//   scope,\n//   accessType,\n//   responseType,\n//   jsSrc,\n//   onRequest,\n//   prompt\n// })\n\n\n  const failedGoogle = (response) =>{\n    // console.log(\"failed\");\n    // console.log(response);\n  }\n    if(window.localStorage.login && window.localStorage.login==\"true\"){\n      window.location.href=\"/intro\";\n    }\n    else{\n      return (\n        <div class=\"page1\">\n        <div class=\"intro\">\n          <p class=\"intro-1\">Let’s <br/> make India Corona-free</p>\n          <p class=\"intro-2\">Inform violations and be a responsible citizen</p>\n          <p class=\"intro-3\">Help enforce social distancing and hygiene in your community.</p>\n        </div>\n        <div class =\"log\">\n        <GoogleLogin \n          clientId=\"916995490002-h4438ccl1o2hth8nk1eipja9ijvo79g6.apps.googleusercontent.com\" \n          render={renderProps => ( <button class=\"but\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Login with Google\n          <img id=\"google_logo\" src=\"icon/Google.png\"  alt=\"noimage\"></img></button> )} \n          buttonText=\"Login\" \n          onSuccess={responseGoogle} \n          onFailure={failedGoogle} \n          cookiePolicy={'single_host_origin'} \n          // isSignedIn={true}\n        \n          />\n          <p class=\"or\">Or</p>\n             <a href=\"/intro\"><p id=\"skip\">Skip Login</p></a>\n           </div>  \n        </div>\n    \n      );\n    }\n    \n  \n  \n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}