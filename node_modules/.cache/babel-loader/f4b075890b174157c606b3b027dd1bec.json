{"ast":null,"code":"\"use strict\"; // Copyright 2019 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst google_auth_library_1 = require(\"google-auth-library\");\n\nclass AuthPlus extends google_auth_library_1.GoogleAuth {\n  constructor() {\n    super(...arguments); // tslint:disable-next-line: variable-name\n\n    this.JWT = google_auth_library_1.JWT; // tslint:disable-next-line: variable-name\n\n    this.Compute = google_auth_library_1.Compute; // tslint:disable-next-line: variable-name\n\n    this.OAuth2 = google_auth_library_1.OAuth2Client; // tslint:disable-next-line: variable-name\n\n    this.GoogleAuth = google_auth_library_1.GoogleAuth;\n  }\n  /**\n   * Override getClient(), memoizing an instance of auth for\n   * subsequent calls to getProjectId().\n   */\n\n\n  async getClient(options) {\n    this._cachedAuth = new google_auth_library_1.GoogleAuth(options);\n    return this._cachedAuth.getClient();\n  }\n\n  getProjectId(callback) {\n    if (callback) {\n      return this._cachedAuth ? this._cachedAuth.getProjectId(callback) : super.getProjectId(callback);\n    } else {\n      return this._cachedAuth ? this._cachedAuth.getProjectId() : super.getProjectId();\n    }\n  }\n\n}\n\nexports.AuthPlus = AuthPlus;","map":{"version":3,"sources":["/home/utkarsh/Desktop/jagrukcorona/react-pwa/node_modules/googleapis-common/build/src/authplus.js"],"names":["Object","defineProperty","exports","value","google_auth_library_1","require","AuthPlus","GoogleAuth","constructor","arguments","JWT","Compute","OAuth2","OAuth2Client","getClient","options","_cachedAuth","getProjectId","callback"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,qBAAqB,GAAGC,OAAO,CAAC,qBAAD,CAArC;;AACA,MAAMC,QAAN,SAAuBF,qBAAqB,CAACG,UAA7C,CAAwD;AACpDC,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT,EADU,CAEV;;AACA,SAAKC,GAAL,GAAWN,qBAAqB,CAACM,GAAjC,CAHU,CAIV;;AACA,SAAKC,OAAL,GAAeP,qBAAqB,CAACO,OAArC,CALU,CAMV;;AACA,SAAKC,MAAL,GAAcR,qBAAqB,CAACS,YAApC,CAPU,CAQV;;AACA,SAAKN,UAAL,GAAkBH,qBAAqB,CAACG,UAAxC;AACH;AACD;;;;;;AAIA,QAAMO,SAAN,CAAgBC,OAAhB,EAAyB;AACrB,SAAKC,WAAL,GAAmB,IAAIZ,qBAAqB,CAACG,UAA1B,CAAqCQ,OAArC,CAAnB;AACA,WAAO,KAAKC,WAAL,CAAiBF,SAAjB,EAAP;AACH;;AACDG,EAAAA,YAAY,CAACC,QAAD,EAAW;AACnB,QAAIA,QAAJ,EAAc;AACV,aAAO,KAAKF,WAAL,GACD,KAAKA,WAAL,CAAiBC,YAAjB,CAA8BC,QAA9B,CADC,GAED,MAAMD,YAAN,CAAmBC,QAAnB,CAFN;AAGH,KAJD,MAKK;AACD,aAAO,KAAKF,WAAL,GACD,KAAKA,WAAL,CAAiBC,YAAjB,EADC,GAED,MAAMA,YAAN,EAFN;AAGH;AACJ;;AA/BmD;;AAiCxDf,OAAO,CAACI,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst google_auth_library_1 = require(\"google-auth-library\");\nclass AuthPlus extends google_auth_library_1.GoogleAuth {\n    constructor() {\n        super(...arguments);\n        // tslint:disable-next-line: variable-name\n        this.JWT = google_auth_library_1.JWT;\n        // tslint:disable-next-line: variable-name\n        this.Compute = google_auth_library_1.Compute;\n        // tslint:disable-next-line: variable-name\n        this.OAuth2 = google_auth_library_1.OAuth2Client;\n        // tslint:disable-next-line: variable-name\n        this.GoogleAuth = google_auth_library_1.GoogleAuth;\n    }\n    /**\n     * Override getClient(), memoizing an instance of auth for\n     * subsequent calls to getProjectId().\n     */\n    async getClient(options) {\n        this._cachedAuth = new google_auth_library_1.GoogleAuth(options);\n        return this._cachedAuth.getClient();\n    }\n    getProjectId(callback) {\n        if (callback) {\n            return this._cachedAuth\n                ? this._cachedAuth.getProjectId(callback)\n                : super.getProjectId(callback);\n        }\n        else {\n            return this._cachedAuth\n                ? this._cachedAuth.getProjectId()\n                : super.getProjectId();\n        }\n    }\n}\nexports.AuthPlus = AuthPlus;\n//# sourceMappingURL=authplus.js.map"]},"metadata":{},"sourceType":"script"}