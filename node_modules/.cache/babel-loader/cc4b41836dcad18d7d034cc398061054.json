{"ast":null,"code":"\"use strict\"; // Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar runtimeconfig_v1beta1;\n\n(function (runtimeconfig_v1beta1) {\n  /**\n   * Cloud Runtime Configuration API\n   *\n   * The Runtime Configurator allows you to dynamically configure and expose variables through Google Cloud Platform. In addition, you can also set Watchers and Waiters that will watch for changes to your data and return based on certain conditions.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const runtimeconfig = google.runtimeconfig('v1beta1');\n   *\n   * @namespace runtimeconfig\n   * @type {Function}\n   * @version v1beta1\n   * @variation v1beta1\n   * @param {object=} options Options for Runtimeconfig\n   */\n  class Runtimeconfig {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.projects = new Resource$Projects(this.context);\n    }\n\n  }\n\n  runtimeconfig_v1beta1.Runtimeconfig = Runtimeconfig;\n\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n      this.configs = new Resource$Projects$Configs(this.context);\n    }\n\n  }\n\n  runtimeconfig_v1beta1.Resource$Projects = Resource$Projects;\n\n  class Resource$Projects$Configs {\n    constructor(context) {\n      this.context = context;\n      this.operations = new Resource$Projects$Configs$Operations(this.context);\n      this.variables = new Resource$Projects$Configs$Variables(this.context);\n      this.waiters = new Resource$Projects$Configs$Waiters(this.context);\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+parent}/configs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+parent}/configs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  runtimeconfig_v1beta1.Resource$Projects$Configs = Resource$Projects$Configs;\n\n  class Resource$Projects$Configs$Operations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  runtimeconfig_v1beta1.Resource$Projects$Configs$Operations = Resource$Projects$Configs$Operations;\n\n  class Resource$Projects$Configs$Variables {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+parent}/variables').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+parent}/variables').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    watch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+name}:watch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  runtimeconfig_v1beta1.Resource$Projects$Configs$Variables = Resource$Projects$Configs$Variables;\n\n  class Resource$Projects$Configs$Waiters {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+parent}/waiters').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+parent}/waiters').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n    testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1beta1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  runtimeconfig_v1beta1.Resource$Projects$Configs$Waiters = Resource$Projects$Configs$Waiters;\n})(runtimeconfig_v1beta1 = exports.runtimeconfig_v1beta1 || (exports.runtimeconfig_v1beta1 = {}));","map":{"version":3,"sources":["/home/utkarsh/Desktop/jagrukcorona/react-pwa/node_modules/googleapis/build/src/apis/runtimeconfig/v1beta1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","runtimeconfig_v1beta1","Runtimeconfig","constructor","options","google","context","_options","projects","Resource$Projects","configs","Resource$Projects$Configs","operations","Resource$Projects$Configs$Operations","variables","Resource$Projects$Configs$Variables","waiters","Resource$Projects$Configs$Waiters","create","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","delete","get","getIamPolicy","list","setIamPolicy","testIamPermissions","update","watch"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar runtimeconfig_v1beta1;\n(function (runtimeconfig_v1beta1) {\n    /**\n     * Cloud Runtime Configuration API\n     *\n     * The Runtime Configurator allows you to dynamically configure and expose variables through Google Cloud Platform. In addition, you can also set Watchers and Waiters that will watch for changes to your data and return based on certain conditions.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const runtimeconfig = google.runtimeconfig('v1beta1');\n     *\n     * @namespace runtimeconfig\n     * @type {Function}\n     * @version v1beta1\n     * @variation v1beta1\n     * @param {object=} options Options for Runtimeconfig\n     */\n    class Runtimeconfig {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    runtimeconfig_v1beta1.Runtimeconfig = Runtimeconfig;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.configs = new Resource$Projects$Configs(this.context);\n        }\n    }\n    runtimeconfig_v1beta1.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Configs {\n        constructor(context) {\n            this.context = context;\n            this.operations = new Resource$Projects$Configs$Operations(this.context);\n            this.variables = new Resource$Projects$Configs$Variables(this.context);\n            this.waiters = new Resource$Projects$Configs$Waiters(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+parent}/configs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+parent}/configs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    runtimeconfig_v1beta1.Resource$Projects$Configs = Resource$Projects$Configs;\n    class Resource$Projects$Configs$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    runtimeconfig_v1beta1.Resource$Projects$Configs$Operations = Resource$Projects$Configs$Operations;\n    class Resource$Projects$Configs$Variables {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+parent}/variables').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+parent}/variables').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        watch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+name}:watch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    runtimeconfig_v1beta1.Resource$Projects$Configs$Variables = Resource$Projects$Configs$Variables;\n    class Resource$Projects$Configs$Waiters {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+parent}/waiters').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+parent}/waiters').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://runtimeconfig.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1beta1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    runtimeconfig_v1beta1.Resource$Projects$Configs$Waiters = Resource$Projects$Configs$Waiters;\n})(runtimeconfig_v1beta1 = exports.runtimeconfig_v1beta1 || (exports.runtimeconfig_v1beta1 = {}));\n//# sourceMappingURL=v1beta1.js.map"]},"metadata":{},"sourceType":"script"}