{"ast":null,"code":"\"use strict\"; // Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar policytroubleshooter_v1;\n\n(function (policytroubleshooter_v1) {\n  /**\n   * Policy Troubleshooter API\n   *\n   *\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const policytroubleshooter = google.policytroubleshooter('v1');\n   *\n   * @namespace policytroubleshooter\n   * @type {Function}\n   * @version v1\n   * @variation v1\n   * @param {object=} options Options for Policytroubleshooter\n   */\n  class Policytroubleshooter {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.iam = new Resource$Iam(this.context);\n    }\n\n  }\n\n  policytroubleshooter_v1.Policytroubleshooter = Policytroubleshooter;\n\n  class Resource$Iam {\n    constructor(context) {\n      this.context = context;\n    }\n\n    troubleshoot(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://policytroubleshooter.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/iam:troubleshoot').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  policytroubleshooter_v1.Resource$Iam = Resource$Iam;\n})(policytroubleshooter_v1 = exports.policytroubleshooter_v1 || (exports.policytroubleshooter_v1 = {}));","map":{"version":3,"sources":["/home/utkarsh/Desktop/jagrukcorona/react-pwa/node_modules/googleapis/build/src/apis/policytroubleshooter/v1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","policytroubleshooter_v1","Policytroubleshooter","constructor","options","google","context","_options","iam","Resource$Iam","troubleshoot","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,mBAAD,CAAnC,C,CACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,uBAAJ;;AACA,CAAC,UAAUA,uBAAV,EAAmC;AAChC;;;;;;;;;;;;;;;AAeA,QAAMC,oBAAN,CAA2B;AACvBC,IAAAA,WAAW,CAACC,OAAD,EAAUC,MAAV,EAAkB;AACzB,WAAKC,OAAL,GAAe;AACXC,QAAAA,QAAQ,EAAEH,OAAO,IAAI,EADV;AAEXC,QAAAA;AAFW,OAAf;AAIA,WAAKG,GAAL,GAAW,IAAIC,YAAJ,CAAiB,KAAKH,OAAtB,CAAX;AACH;;AAPsB;;AAS3BL,EAAAA,uBAAuB,CAACC,oBAAxB,GAA+CA,oBAA/C;;AACA,QAAMO,YAAN,CAAmB;AACfN,IAAAA,WAAW,CAACG,OAAD,EAAU;AACjB,WAAKA,OAAL,GAAeA,OAAf;AACH;;AACDI,IAAAA,YAAY,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;AACxD,UAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;AACA,UAAIP,OAAO,GAAIQ,iBAAiB,IAAI,EAApC;;AACA,UAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;AACxCE,QAAAA,QAAQ,GAAGF,gBAAX;AACAG,QAAAA,MAAM,GAAG,EAAT;AACAV,QAAAA,OAAO,GAAG,EAAV;AACH;;AACD,UAAI,OAAOQ,iBAAP,KAA6B,UAAjC,EAA6C;AACzCC,QAAAA,QAAQ,GAAGD,iBAAX;AACAR,QAAAA,OAAO,GAAG,EAAV;AACH;;AACD,YAAMW,OAAO,GAAGX,OAAO,CAACW,OAAR,IAAmB,8CAAnC;AACA,YAAMC,UAAU,GAAG;AACfZ,QAAAA,OAAO,EAAET,MAAM,CAACsB,MAAP,CAAc;AACnBC,UAAAA,GAAG,EAAE,CAACH,OAAO,GAAG,sBAAX,EAAmCI,OAAnC,CAA2C,cAA3C,EAA2D,IAA3D,CADc;AAEnBC,UAAAA,MAAM,EAAE;AAFW,SAAd,EAGNhB,OAHM,CADM;AAKfU,QAAAA,MALe;AAMfO,QAAAA,cAAc,EAAE,EAND;AAOfC,QAAAA,UAAU,EAAE,EAPG;AAQfhB,QAAAA,OAAO,EAAE,KAAKA;AARC,OAAnB;;AAUA,UAAIO,QAAJ,EAAc;AACVd,QAAAA,mBAAmB,CAACwB,gBAApB,CAAqCP,UAArC,EAAiDH,QAAjD;AACH,OAFD,MAGK;AACD,eAAOd,mBAAmB,CAACwB,gBAApB,CAAqCP,UAArC,CAAP;AACH;AACJ;;AAjCc;;AAmCnBf,EAAAA,uBAAuB,CAACQ,YAAxB,GAAuCA,YAAvC;AACH,CA9DD,EA8DGR,uBAAuB,GAAGJ,OAAO,CAACI,uBAAR,KAAoCJ,OAAO,CAACI,uBAAR,GAAkC,EAAtE,CA9D7B","sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar policytroubleshooter_v1;\n(function (policytroubleshooter_v1) {\n    /**\n     * Policy Troubleshooter API\n     *\n     *\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const policytroubleshooter = google.policytroubleshooter('v1');\n     *\n     * @namespace policytroubleshooter\n     * @type {Function}\n     * @version v1\n     * @variation v1\n     * @param {object=} options Options for Policytroubleshooter\n     */\n    class Policytroubleshooter {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.iam = new Resource$Iam(this.context);\n        }\n    }\n    policytroubleshooter_v1.Policytroubleshooter = Policytroubleshooter;\n    class Resource$Iam {\n        constructor(context) {\n            this.context = context;\n        }\n        troubleshoot(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://policytroubleshooter.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/iam:troubleshoot').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    policytroubleshooter_v1.Resource$Iam = Resource$Iam;\n})(policytroubleshooter_v1 = exports.policytroubleshooter_v1 || (exports.policytroubleshooter_v1 = {}));\n//# sourceMappingURL=v1.js.map"]},"metadata":{},"sourceType":"script"}