{"ast":null,"code":"\"use strict\"; // Copyright 2012 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst apis = require(\"./apis\");\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nexports.AuthPlus = googleapis_common_1.AuthPlus;\n\nclass GoogleApis extends apis.GeneratedAPIs {\n  /**\n   * GoogleApis constructor.\n   *\n   * @example\n   * const GoogleApis = require('googleapis').GoogleApis;\n   * const google = new GoogleApis();\n   *\n   * @class GoogleApis\n   * @param {Object} [options] Configuration options.\n   */\n  constructor(options) {\n    super();\n    this._discovery = new googleapis_common_1.Discovery({\n      debug: false,\n      includePrivate: false\n    });\n    this.auth = new googleapis_common_1.AuthPlus();\n    this._options = {};\n    this.options(options);\n  }\n  /**\n   * Obtain a Map of supported APIs, along with included API versions.\n   */\n\n\n  getSupportedAPIs() {\n    const apiMap = {};\n    Object.keys(apis.APIS).forEach(a => {\n      apiMap[a] = Object.keys(apis.APIS[a]);\n    });\n    return apiMap;\n  }\n  /**\n   * Set options.\n   *\n   * @param  {Object} [options] Configuration options.\n   */\n\n\n  options(options) {\n    this._options = options || {};\n  }\n  /**\n   * Add APIs endpoints to googleapis object\n   * E.g. googleapis.drive and googleapis.datastore\n   *\n   * @name GoogleApis#addAPIs\n   * @method\n   * @param {Object} apis Apis to be added to this GoogleApis instance.\n   * @private\n   */\n\n\n  addAPIs(apisToAdd) {\n    for (const apiName in apisToAdd) {\n      if (apisToAdd.hasOwnProperty(apiName)) {\n        // tslint:disable-next-line: no-any\n        this[apiName] = apisToAdd[apiName].bind(this);\n      }\n    }\n  }\n\n  discover(url, callback) {\n    if (callback) {\n      this.discoverAsync(url).then(() => callback()).catch(callback);\n    } else {\n      return this.discoverAsync(url);\n    }\n  }\n\n  async discoverAsync(url) {\n    const allApis = await this._discovery.discoverAllAPIs(url);\n    this.addAPIs(allApis);\n  }\n  /**\n   * Dynamically generate an Endpoint object from a discovery doc.\n   *\n   * @param path Url or file path to discover doc for a single API.\n   * @param Options to configure the Endpoint object generated from the\n   * discovery doc.\n   * @returns A promise that resolves with the configured endpoint.\n   */\n\n\n  async discoverAPI(apiPath, options = {}) {\n    const endpointCreator = await this._discovery.discoverAPI(apiPath);\n    const ep = endpointCreator(options, this);\n    ep.google = this; // for drive.google.transporter\n\n    return Object.freeze(ep);\n  }\n\n}\n\nexports.GoogleApis = GoogleApis;","map":{"version":3,"sources":["/home/utkarsh/Desktop/jagrukcorona/react-pwa/node_modules/googleapis/build/src/googleapis.js"],"names":["Object","defineProperty","exports","value","apis","require","googleapis_common_1","AuthPlus","GoogleApis","GeneratedAPIs","constructor","options","_discovery","Discovery","debug","includePrivate","auth","_options","getSupportedAPIs","apiMap","keys","APIS","forEach","a","addAPIs","apisToAdd","apiName","hasOwnProperty","bind","discover","url","callback","discoverAsync","then","catch","allApis","discoverAllAPIs","discoverAPI","apiPath","endpointCreator","ep","google","freeze"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,mBAAD,CAAnC;;AACAH,OAAO,CAACK,QAAR,GAAmBD,mBAAmB,CAACC,QAAvC;;AACA,MAAMC,UAAN,SAAyBJ,IAAI,CAACK,aAA9B,CAA4C;AACxC;;;;;;;;;;AAUAC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;AACA,SAAKC,UAAL,GAAkB,IAAIN,mBAAmB,CAACO,SAAxB,CAAkC;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,cAAc,EAAE;AAAhC,KAAlC,CAAlB;AACA,SAAKC,IAAL,GAAY,IAAIV,mBAAmB,CAACC,QAAxB,EAAZ;AACA,SAAKU,QAAL,GAAgB,EAAhB;AACA,SAAKN,OAAL,CAAaA,OAAb;AACH;AACD;;;;;AAGAO,EAAAA,gBAAgB,GAAG;AACf,UAAMC,MAAM,GAAG,EAAf;AACAnB,IAAAA,MAAM,CAACoB,IAAP,CAAYhB,IAAI,CAACiB,IAAjB,EAAuBC,OAAvB,CAA+BC,CAAC,IAAI;AAChCJ,MAAAA,MAAM,CAACI,CAAD,CAAN,GAAYvB,MAAM,CAACoB,IAAP,CAAYhB,IAAI,CAACiB,IAAL,CAAUE,CAAV,CAAZ,CAAZ;AACH,KAFD;AAGA,WAAOJ,MAAP;AACH;AACD;;;;;;;AAKAR,EAAAA,OAAO,CAACA,OAAD,EAAU;AACb,SAAKM,QAAL,GAAgBN,OAAO,IAAI,EAA3B;AACH;AACD;;;;;;;;;;;AASAa,EAAAA,OAAO,CAACC,SAAD,EAAY;AACf,SAAK,MAAMC,OAAX,IAAsBD,SAAtB,EAAiC;AAC7B,UAAIA,SAAS,CAACE,cAAV,CAAyBD,OAAzB,CAAJ,EAAuC;AACnC;AACA,aAAKA,OAAL,IAAgBD,SAAS,CAACC,OAAD,CAAT,CAAmBE,IAAnB,CAAwB,IAAxB,CAAhB;AACH;AACJ;AACJ;;AACDC,EAAAA,QAAQ,CAACC,GAAD,EAAMC,QAAN,EAAgB;AACpB,QAAIA,QAAJ,EAAc;AACV,WAAKC,aAAL,CAAmBF,GAAnB,EACKG,IADL,CACU,MAAMF,QAAQ,EADxB,EAEKG,KAFL,CAEWH,QAFX;AAGH,KAJD,MAKK;AACD,aAAO,KAAKC,aAAL,CAAmBF,GAAnB,CAAP;AACH;AACJ;;AACD,QAAME,aAAN,CAAoBF,GAApB,EAAyB;AACrB,UAAMK,OAAO,GAAG,MAAM,KAAKvB,UAAL,CAAgBwB,eAAhB,CAAgCN,GAAhC,CAAtB;AACA,SAAKN,OAAL,CAAaW,OAAb;AACH;AACD;;;;;;;;;;AAQA,QAAME,WAAN,CAAkBC,OAAlB,EAA2B3B,OAAO,GAAG,EAArC,EAAyC;AACrC,UAAM4B,eAAe,GAAG,MAAM,KAAK3B,UAAL,CAAgByB,WAAhB,CAA4BC,OAA5B,CAA9B;AACA,UAAME,EAAE,GAAGD,eAAe,CAAC5B,OAAD,EAAU,IAAV,CAA1B;AACA6B,IAAAA,EAAE,CAACC,MAAH,GAAY,IAAZ,CAHqC,CAGnB;;AAClB,WAAOzC,MAAM,CAAC0C,MAAP,CAAcF,EAAd,CAAP;AACH;;AAhFuC;;AAkF5CtC,OAAO,CAACM,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\n// Copyright 2012 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst apis = require(\"./apis\");\nconst googleapis_common_1 = require(\"googleapis-common\");\nexports.AuthPlus = googleapis_common_1.AuthPlus;\nclass GoogleApis extends apis.GeneratedAPIs {\n    /**\n     * GoogleApis constructor.\n     *\n     * @example\n     * const GoogleApis = require('googleapis').GoogleApis;\n     * const google = new GoogleApis();\n     *\n     * @class GoogleApis\n     * @param {Object} [options] Configuration options.\n     */\n    constructor(options) {\n        super();\n        this._discovery = new googleapis_common_1.Discovery({ debug: false, includePrivate: false });\n        this.auth = new googleapis_common_1.AuthPlus();\n        this._options = {};\n        this.options(options);\n    }\n    /**\n     * Obtain a Map of supported APIs, along with included API versions.\n     */\n    getSupportedAPIs() {\n        const apiMap = {};\n        Object.keys(apis.APIS).forEach(a => {\n            apiMap[a] = Object.keys(apis.APIS[a]);\n        });\n        return apiMap;\n    }\n    /**\n     * Set options.\n     *\n     * @param  {Object} [options] Configuration options.\n     */\n    options(options) {\n        this._options = options || {};\n    }\n    /**\n     * Add APIs endpoints to googleapis object\n     * E.g. googleapis.drive and googleapis.datastore\n     *\n     * @name GoogleApis#addAPIs\n     * @method\n     * @param {Object} apis Apis to be added to this GoogleApis instance.\n     * @private\n     */\n    addAPIs(apisToAdd) {\n        for (const apiName in apisToAdd) {\n            if (apisToAdd.hasOwnProperty(apiName)) {\n                // tslint:disable-next-line: no-any\n                this[apiName] = apisToAdd[apiName].bind(this);\n            }\n        }\n    }\n    discover(url, callback) {\n        if (callback) {\n            this.discoverAsync(url)\n                .then(() => callback())\n                .catch(callback);\n        }\n        else {\n            return this.discoverAsync(url);\n        }\n    }\n    async discoverAsync(url) {\n        const allApis = await this._discovery.discoverAllAPIs(url);\n        this.addAPIs(allApis);\n    }\n    /**\n     * Dynamically generate an Endpoint object from a discovery doc.\n     *\n     * @param path Url or file path to discover doc for a single API.\n     * @param Options to configure the Endpoint object generated from the\n     * discovery doc.\n     * @returns A promise that resolves with the configured endpoint.\n     */\n    async discoverAPI(apiPath, options = {}) {\n        const endpointCreator = await this._discovery.discoverAPI(apiPath);\n        const ep = endpointCreator(options, this);\n        ep.google = this; // for drive.google.transporter\n        return Object.freeze(ep);\n    }\n}\nexports.GoogleApis = GoogleApis;\n//# sourceMappingURL=googleapis.js.map"]},"metadata":{},"sourceType":"script"}