{"ast":null,"code":"\"use strict\"; // Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar safebrowsing_v4;\n\n(function (safebrowsing_v4) {\n  /**\n   * Safe Browsing API\n   *\n   * Enables client applications to check web resources (most commonly URLs) against Google-generated lists of unsafe web resources. The Safe Browsing APIs are for non-commercial use only. If you need to use APIs to detect malicious URLs for commercial purposes – meaning “for sale or revenue-generating purposes” – please refer to the Web Risk API.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const safebrowsing = google.safebrowsing('v4');\n   *\n   * @namespace safebrowsing\n   * @type {Function}\n   * @version v4\n   * @variation v4\n   * @param {object=} options Options for Safebrowsing\n   */\n  class Safebrowsing {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.encodedFullHashes = new Resource$Encodedfullhashes(this.context);\n      this.encodedUpdates = new Resource$Encodedupdates(this.context);\n      this.fullHashes = new Resource$Fullhashes(this.context);\n      this.threatHits = new Resource$Threathits(this.context);\n      this.threatLists = new Resource$Threatlists(this.context);\n      this.threatListUpdates = new Resource$Threatlistupdates(this.context);\n      this.threatMatches = new Resource$Threatmatches(this.context);\n    }\n\n  }\n\n  safebrowsing_v4.Safebrowsing = Safebrowsing;\n\n  class Resource$Encodedfullhashes {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v4/encodedFullHashes/{encodedRequest}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['encodedRequest'],\n        pathParams: ['encodedRequest'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  safebrowsing_v4.Resource$Encodedfullhashes = Resource$Encodedfullhashes;\n\n  class Resource$Encodedupdates {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v4/encodedUpdates/{encodedRequest}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['encodedRequest'],\n        pathParams: ['encodedRequest'],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  safebrowsing_v4.Resource$Encodedupdates = Resource$Encodedupdates;\n\n  class Resource$Fullhashes {\n    constructor(context) {\n      this.context = context;\n    }\n\n    find(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v4/fullHashes:find').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  safebrowsing_v4.Resource$Fullhashes = Resource$Fullhashes;\n\n  class Resource$Threathits {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v4/threatHits').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  safebrowsing_v4.Resource$Threathits = Resource$Threathits;\n\n  class Resource$Threatlists {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v4/threatLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  safebrowsing_v4.Resource$Threatlists = Resource$Threatlists;\n\n  class Resource$Threatlistupdates {\n    constructor(context) {\n      this.context = context;\n    }\n\n    fetch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v4/threatListUpdates:fetch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  safebrowsing_v4.Resource$Threatlistupdates = Resource$Threatlistupdates;\n\n  class Resource$Threatmatches {\n    constructor(context) {\n      this.context = context;\n    }\n\n    find(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v4/threatMatches:find').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        googleapis_common_1.createAPIRequest(parameters, callback);\n      } else {\n        return googleapis_common_1.createAPIRequest(parameters);\n      }\n    }\n\n  }\n\n  safebrowsing_v4.Resource$Threatmatches = Resource$Threatmatches;\n})(safebrowsing_v4 = exports.safebrowsing_v4 || (exports.safebrowsing_v4 = {}));","map":{"version":3,"sources":["/home/utkarsh/Desktop/jagrukcorona/react-pwa/node_modules/googleapis/build/src/apis/safebrowsing/v4.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","safebrowsing_v4","Safebrowsing","constructor","options","google","context","_options","encodedFullHashes","Resource$Encodedfullhashes","encodedUpdates","Resource$Encodedupdates","fullHashes","Resource$Fullhashes","threatHits","Resource$Threathits","threatLists","Resource$Threatlists","threatListUpdates","Resource$Threatlistupdates","threatMatches","Resource$Threatmatches","get","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","find","create","list","fetch"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar safebrowsing_v4;\n(function (safebrowsing_v4) {\n    /**\n     * Safe Browsing API\n     *\n     * Enables client applications to check web resources (most commonly URLs) against Google-generated lists of unsafe web resources. The Safe Browsing APIs are for non-commercial use only. If you need to use APIs to detect malicious URLs for commercial purposes – meaning “for sale or revenue-generating purposes” – please refer to the Web Risk API.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const safebrowsing = google.safebrowsing('v4');\n     *\n     * @namespace safebrowsing\n     * @type {Function}\n     * @version v4\n     * @variation v4\n     * @param {object=} options Options for Safebrowsing\n     */\n    class Safebrowsing {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.encodedFullHashes = new Resource$Encodedfullhashes(this.context);\n            this.encodedUpdates = new Resource$Encodedupdates(this.context);\n            this.fullHashes = new Resource$Fullhashes(this.context);\n            this.threatHits = new Resource$Threathits(this.context);\n            this.threatLists = new Resource$Threatlists(this.context);\n            this.threatListUpdates = new Resource$Threatlistupdates(this.context);\n            this.threatMatches = new Resource$Threatmatches(this.context);\n        }\n    }\n    safebrowsing_v4.Safebrowsing = Safebrowsing;\n    class Resource$Encodedfullhashes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/encodedFullHashes/{encodedRequest}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['encodedRequest'],\n                pathParams: ['encodedRequest'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Encodedfullhashes = Resource$Encodedfullhashes;\n    class Resource$Encodedupdates {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/encodedUpdates/{encodedRequest}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['encodedRequest'],\n                pathParams: ['encodedRequest'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Encodedupdates = Resource$Encodedupdates;\n    class Resource$Fullhashes {\n        constructor(context) {\n            this.context = context;\n        }\n        find(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/fullHashes:find').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Fullhashes = Resource$Fullhashes;\n    class Resource$Threathits {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/threatHits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Threathits = Resource$Threathits;\n    class Resource$Threatlists {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/threatLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Threatlists = Resource$Threatlists;\n    class Resource$Threatlistupdates {\n        constructor(context) {\n            this.context = context;\n        }\n        fetch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/threatListUpdates:fetch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Threatlistupdates = Resource$Threatlistupdates;\n    class Resource$Threatmatches {\n        constructor(context) {\n            this.context = context;\n        }\n        find(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v4/threatMatches:find').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    safebrowsing_v4.Resource$Threatmatches = Resource$Threatmatches;\n})(safebrowsing_v4 = exports.safebrowsing_v4 || (exports.safebrowsing_v4 = {}));\n//# sourceMappingURL=v4.js.map"]},"metadata":{},"sourceType":"script"}