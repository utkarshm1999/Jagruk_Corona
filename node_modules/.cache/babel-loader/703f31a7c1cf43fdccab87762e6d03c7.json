{"ast":null,"code":"import React,{useState}from'react';import ReactDOM from'react-dom';import logo from\"./logo.svg\";import'./App.css';import{GoogleLogin}from'react-google-login';import{useHistory}from'react-router-dom';import GoogleLogout from'react-google-login';import{Redirect}from'react-router-dom';import{render}from'@testing-library/react';import Report from'./report';import{useGoogleLogin}from'react-google-login';var googleConfig={clientId:'916995490002-h4438ccl1o2hth8nk1eipja9ijvo79g6.apps.googleusercontent.com',// e.g. asdfghjkljhgfdsghjk.apps.googleusercontent.com\nclientSecret:'EEWeOXFIARPTJQ3M0X_DM-sb',// e.g. _ASDFA%DFASDFASDFASD#FAD-\nredirect:'https://me.jc.com/login'// this must match your google api settings\n};/**\n * Create the google auth object which gives us access to talk to google's apis.\n */var defaultScope=['https://www.googleapis.com/auth/plus.me','https://www.googleapis.com/auth/userinfo.email'];function App(){var responseGoogle=function responseGoogle(response){// console.log(\"succes login\");\n// console.log(response);\n//setState =\"1\";\nwindow.localStorage.firstname=response.profileObj.givenName;window.localStorage.secondname=response.profileObj.familyName;window.localStorage.email=response.profileObj.email;window.localStorage.login=\"true\";window.localStorage.uid=response.profileObj.googleId;fetch(\"https://demo-stormbreaker.herokuapp.com/users/is_exist\",{method:\"POST\",firebase_id:window.localStorage.uid,body:JSON.stringify({firebase_id:window.localStorage.uid})}).then(function(res){return res.json();}).then(function(result){if(result.status==true){// no register needed\n// console.log(\"no register, adding uuid\");\n// console.log(result);\nwindow.localStorage.uuid=result.user_id;}else{//register needed\nconsole.log(\"registering\");fetch(\"https://demo-stormbreaker.herokuapp.com/users/register\",{method:\"POST\",firebase_id:window.localStorage.uid,body:JSON.stringify({firebase_id:window.localStorage.uid,first_name:window.localStorage.firstname,last_name:window.localStorage.secondname,email:window.localStorage.email,device_id:\"1\"})}).then(function(res){return res.json();}).then(function(result){// console.log(\"register result\");\n// console.log(result);\nwindow.localStorage.uuid=result.user_id;},// Note: it's important to handle errors here\n// instead of a catch() block so that we don't swallow\n// exceptions from actual bugs in components.\nfunction(error){// register unsucessful, show error & redirect to home page\nwindow.location.href=\"/home\";});}},// Note: it's important to handle errors here\n// instead of a catch() block so that we don't swallow\n// exceptions from actual bugs in components.\nfunction(error){// console.log(\"error\");\n//console.log(error);\n});window.location.href=\"/intro\";};// const { signIn, loaded } = useGoogleLogin({\n//   onSuccess,\n//   clientId,\n//   cookiePolicy,\n//   loginHint,\n//   hostedDomain,\n//   autoLoad,\n//   isSignedIn,\n//   fetchBasicProfile,\n//   redirectUri,\n//   discoveryDocs,\n//   onFailure,\n//   uxMode,\n//   scope,\n//   accessType,\n//   responseType,\n//   jsSrc,\n//   onRequest,\n//   prompt\n// })\nvar failedGoogle=function failedGoogle(response){// console.log(\"failed\");\n// console.log(response);\n};if(window.localStorage.login&&window.localStorage.login==\"true\"){window.location.href=\"/intro\";}else{return/*#__PURE__*/React.createElement(\"div\",{class:\"page1\"},/*#__PURE__*/React.createElement(\"div\",{class:\"intro\"},/*#__PURE__*/React.createElement(\"p\",{class:\"intro-1\"},\"Let\\u2019s \",/*#__PURE__*/React.createElement(\"br\",null),\" make India Corona-free\"),/*#__PURE__*/React.createElement(\"p\",{class:\"intro-2\"},\"Inform violations and be a responsible citizen\"),/*#__PURE__*/React.createElement(\"p\",{class:\"intro-3\"},\"Help enforce social distancing and hygiene in your community.\")),/*#__PURE__*/React.createElement(\"div\",{class:\"log\"},/*#__PURE__*/React.createElement(GoogleLogin,{clientId:\"916995490002-h4438ccl1o2hth8nk1eipja9ijvo79g6.apps.googleusercontent.com\",render:function render(renderProps){return/*#__PURE__*/React.createElement(\"button\",{class:\"but\",onClick:renderProps.onClick,disabled:renderProps.disabled},\"Login with Google\",/*#__PURE__*/React.createElement(\"img\",{id:\"google_logo\",src:\"icon/Google.png\",alt:\"noimage\"}));},buttonText:\"Login\",onSuccess:responseGoogle,onFailure:failedGoogle,cookiePolicy:'single_host_origin'// isSignedIn={true}\n}),/*#__PURE__*/React.createElement(\"p\",{class:\"or\"},\"Or\"),/*#__PURE__*/React.createElement(\"a\",{href:\"/intro\"},/*#__PURE__*/React.createElement(\"p\",{id:\"skip\"},\"Skip Login\"))));}}export default App;","map":{"version":3,"sources":["/home/utkarsh/Desktop/Jagruk_Corona/src/App.js"],"names":["React","useState","ReactDOM","GoogleLogin","useHistory","GoogleLogout","Redirect","render","Report","useGoogleLogin","googleConfig","clientId","clientSecret","redirect","defaultScope","App","responseGoogle","response","window","localStorage","firstname","profileObj","givenName","secondname","familyName","email","login","uid","googleId","fetch","method","firebase_id","body","JSON","stringify","then","res","json","result","status","uuid","user_id","console","log","first_name","last_name","device_id","error","location","href","failedGoogle","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport {GoogleLogin} from 'react-google-login';\nimport { useHistory } from 'react-router-dom';\nimport GoogleLogout from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\nimport { render } from '@testing-library/react';\nimport Report from './report';\nimport { useGoogleLogin } from 'react-google-login';\n\n\nconst googleConfig = {\n  clientId: '916995490002-h4438ccl1o2hth8nk1eipja9ijvo79g6.apps.googleusercontent.com', // e.g. asdfghjkljhgfdsghjk.apps.googleusercontent.com\n  clientSecret: 'EEWeOXFIARPTJQ3M0X_DM-sb', // e.g. _ASDFA%DFASDFASDFASD#FAD-\n  redirect: 'https://me.jc.com/login' // this must match your google api settings\n};\n\n/**\n * Create the google auth object which gives us access to talk to google's apis.\n */\n\nconst defaultScope = [\n    'https://www.googleapis.com/auth/plus.me',\n    'https://www.googleapis.com/auth/userinfo.email',\n];\n\n\n\nfunction App() {\n  \n  const responseGoogle = (response) => {\n    // console.log(\"succes login\");\n    // console.log(response);\n  \n    //setState =\"1\";\n    window.localStorage.firstname=response.profileObj.givenName;\n    window.localStorage.secondname=response.profileObj.familyName;\n    window.localStorage.email=response.profileObj.email;\n    window.localStorage.login=\"true\";\n    window.localStorage.uid = response.profileObj.googleId;\n    fetch(\"https://demo-stormbreaker.herokuapp.com/users/is_exist\",{\n      method: \"POST\",\n      firebase_id: window.localStorage.uid,\n      body: JSON.stringify({\n          firebase_id: window.localStorage.uid\n      })\n  })\n  .then(res => res.json())\n  .then(\n   (result) => {\n     \n     if(result.status==true){\n         // no register needed\n         // console.log(\"no register, adding uuid\");\n         // console.log(result);\n         window.localStorage.uuid=result.user_id;\n     }\n     else{\n         //register needed\n         console.log(\"registering\");\n         fetch(\"https://demo-stormbreaker.herokuapp.com/users/register\",{\n           method: \"POST\",\n           firebase_id: window.localStorage.uid,\n           body: JSON.stringify({\n               firebase_id: window.localStorage.uid,\n               first_name: window.localStorage.firstname,\n               last_name: window.localStorage.secondname,\n               email: window.localStorage.email,\n               device_id:\"1\"\n\n\n           })\n       })\n       .then(res => res.json())\n       .then(\n        (result) => {\n               // console.log(\"register result\");\n               // console.log(result);\n               window.localStorage.uuid=result.user_id;\n          \n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          // register unsucessful, show error & redirect to home page\n           window.location.href=\"/home\";\n\n        });\n\n     }\n   },\n   // Note: it's important to handle errors here\n   // instead of a catch() block so that we don't swallow\n   // exceptions from actual bugs in components.\n   (error) => {\n    // console.log(\"error\");\n     //console.log(error);\n   });\n\n\n\n    window.location.href=\"/intro\";\n    \n}\n// const { signIn, loaded } = useGoogleLogin({\n//   onSuccess,\n//   clientId,\n//   cookiePolicy,\n//   loginHint,\n//   hostedDomain,\n//   autoLoad,\n//   isSignedIn,\n//   fetchBasicProfile,\n//   redirectUri,\n//   discoveryDocs,\n//   onFailure,\n//   uxMode,\n//   scope,\n//   accessType,\n//   responseType,\n//   jsSrc,\n//   onRequest,\n//   prompt\n// })\n\n\n  const failedGoogle = (response) =>{\n    // console.log(\"failed\");\n    // console.log(response);\n  }\n    if(window.localStorage.login && window.localStorage.login==\"true\"){\n      window.location.href=\"/intro\";\n    }\n    else{\n      return (\n        <div class=\"page1\">\n        <div class=\"intro\">\n          <p class=\"intro-1\">Let’s <br/> make India Corona-free</p>\n          <p class=\"intro-2\">Inform violations and be a responsible citizen</p>\n          <p class=\"intro-3\">Help enforce social distancing and hygiene in your community.</p>\n        </div>\n        <div class =\"log\">\n        <GoogleLogin \n          clientId=\"916995490002-h4438ccl1o2hth8nk1eipja9ijvo79g6.apps.googleusercontent.com\" \n          render={renderProps => ( <button class=\"but\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Login with Google\n          <img id=\"google_logo\" src=\"icon/Google.png\"  alt=\"noimage\"></img></button> )} \n          buttonText=\"Login\" \n          onSuccess={responseGoogle} \n          onFailure={failedGoogle} \n          cookiePolicy={'single_host_origin'} \n          // isSignedIn={true}\n        \n          />\n          <p class=\"or\">Or</p>\n             <a href=\"/intro\"><p id=\"skip\">Skip Login</p></a>\n           </div>  \n        </div>\n    \n      );\n    }\n    \n  \n  \n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}